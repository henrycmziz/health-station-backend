<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.henry.patient.mapper.PatientTypeMapper">

    <resultMap id="PatientTypeResult" type="PatientType">
        <id property="typeId" column="type_id" />
        <result property="parentId" column="parent_id" />
        <result property="ancestors" column="ancestors" />
        <result property="typeName" column="type_name" />
        <result property="typeDescribe" column="type_describe" />
        <result property="orderNum" column="order_num" />
        <result property="leader" column="leader" />
        <result property="phone" column="phone" />
        <result property="email" column="email" />
        <result property="status" column="status" />
        <result property="delFlag" column="del_flag" />
        <result property="createBy" column="create_by" />
        <result property="createTime" column="create_time" />
        <result property="updateBy" column="update_by" />
        <result property="updateTime" column="update_time" />
    </resultMap>

    <sql id="selectTypeVo">
        select *
        from biz_patient_type t
    </sql>

    <select id="selectTypeList" parameterType="PatientType" resultMap="PatientTypeResult">
        <include refid="selectTypeVo" />
        where t.del_flag = '0'
        <if test="typeId != null and typeId != 0">
            and type_id = #{typeId}
        </if>
        <if test="parentId != null and parentId != 0">
            and parent_id = #{parentId}
        </if>
        <if test="typeName != null and typeName != ''">
            and type_name like concat('%', #{typeName}, '%')
        </if>
        <if test="status != null and status != ''">
            and status = #{status}
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
        order by t.parent_id, t.order_num
    </select>

    <select id="selectTypeListByRoleId" resultType="Long">
        <!--        select t.type_id-->
        <!--        from biz_patient_type t-->
        <!--        left join sys_role_dept rd on d.type_id = rd.type_id-->
        <!--        where rd.role_id = #{roleId}-->
        <!--        <if test="deptCheckStrictly">-->
        <!--            and d.type_id not in (select d.parent_id from biz_patient_type d inner join sys_role_dept rd on d.type_id =-->
        <!--            rd.type_id and rd.role_id = #{roleId})-->
        <!--        </if>-->
        <!--        order by d.parent_id, d.order_num-->
    </select>

    <select id="selectTypeById" parameterType="Long" resultMap="PatientTypeResult">
        <include refid="selectTypeVo" />
        where type_id = #{typeId}
    </select>

    <select id="checkTypeExistUser" parameterType="Long" resultType="int">
        select count(1)
        from sys_user u left join biz_patient_expand bpe on bpe.main_user_id = u.user_id
        where type_id = #{typeId}
          and del_flag = '0'
    </select>

    <select id="hasChildByTypeId" parameterType="Long" resultType="int">
        select count(1)
        from biz_patient_type
        where del_flag = '0'
          and parent_id = #{typeId}
        limit 1
    </select>

    <select id="selectChildrenTypeById" parameterType="Long" resultMap="PatientTypeResult">
        select *
        from biz_patient_type
        where find_in_set(#{typeId}, ancestors)
    </select>

    <select id="selectNormalChildrenTypeById" parameterType="Long" resultType="int">
        select count(*)
        from biz_patient_type
        where status = 0
          and del_flag = '0'
          and find_in_set(#{typeId}, ancestors)
    </select>

    <select id="checkTypeNameUnique" resultMap="PatientTypeResult">
        <include refid="selectTypeVo" />
        where type_name=#{typeName} and parent_id = #{parentId} limit 1
    </select>

    <insert id="insertType" parameterType="PatientType">
        insert into biz_patient_type(
        <if test="typeId != null and typeId != 0">type_id,</if>
        <if test="parentId != null and parentId != 0">parent_id,</if>
        <if test="typeName != null and typeName != ''">type_name,</if>
        <if test="typeDescribe != null and typeDescribe != ''">type_describe,</if>
        <if test="ancestors != null and ancestors != ''">ancestors,</if>
        <if test="orderNum != null and orderNum != ''">order_num,</if>
        <if test="leader != null and leader != ''">leader,</if>
        <if test="phone != null and phone != ''">phone,</if>
        <if test="email != null and email != ''">email,</if>
        <if test="status != null">status,</if>
        <if test="createBy != null and createBy != ''">create_by</if>
        )values(
        <if test="typeId != null and typeId != 0">#{typeId},</if>
        <if test="parentId != null and parentId != 0">#{parentId},</if>
        <if test="typeName != null and typeName != ''">#{typeName},</if>
        <if test="typeDescribe != null and typeDescribe != ''">#{typeDescribe},</if>
        <if test="ancestors != null and ancestors != ''">#{ancestors},</if>
        <if test="orderNum != null and orderNum != ''">#{orderNum},</if>
        <if test="leader != null and leader != ''">#{leader},</if>
        <if test="phone != null and phone != ''">#{phone},</if>
        <if test="email != null and email != ''">#{email},</if>
        <if test="status != null">#{status},</if>
        <if test="createBy != null and createBy != ''">#{createBy}</if>
        )
    </insert>

    <update id="updateType" parameterType="patientType">
        update biz_patient_type
        <set>
            <if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
            <if test="typeName != null and typeName != ''">type_name = #{typeName},</if>
            <if test="typeDescribe != null">type_describe = #{typeDescribe},</if>
            <if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
            <if test="orderNum != null and orderNum != ''">order_num = #{orderNum},</if>
            <if test="leader != null">leader = #{leader},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
        </set>
        where type_id = #{typeId}
    </update>

    <update id="updateTypeChildren" parameterType="java.util.List">
        update biz_patient_type set ancestors =
        <foreach collection="types" item="item" index="index" separator=" " open="case type_id" close="end">
            when #{item.typeId} then #{item.ancestors}
        </foreach>
        where type_id in
        <foreach collection="types" item="item" index="index" separator="," open="(" close=")">
            #{item.typeId}
        </foreach>
    </update>

    <update id="updateTypeStatusNormal" parameterType="Long">
        update biz_patient_type set status = '0' where type_id in
        <foreach collection="array" item="typeId" open="(" separator="," close=")">
            #{typeId}
        </foreach>
    </update>

    <delete id="deleteTypeById" parameterType="Long">
        update biz_patient_type
        set del_flag = '2'
        where type_id = #{typeId}
    </delete>
</mapper>
